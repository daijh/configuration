
" ===Common Setting===
colorscheme delek

syntax on
filetype plugin indent on
let mapleader = ","
set ignorecase
set incsearch
set nonumber
set nocompatible " not compatible w/ vi
set cursorline " highlight current line


" normal file type
set tabstop=4 softtabstop=4 shiftwidth=4
set expandtab

" ===Common Setting End===

" ===FileType===

autocmd FileType sh setlocal tabstop=4 softtabstop=4 shiftwidth=4
autocmd Filetype html,javascript setlocal tabstop=2 softtabstop=2 shiftwidth=2 tw=80 expandtab

autocmd FileType c,cpp : set foldmethod=syntax
autocmd FileType c,cpp : set nofoldenable
" google
autocmd FileType c,cpp setlocal tabstop=2 softtabstop=2 shiftwidth=2 tw=80 expandtab

" gitcommit
autocmd FileType gitcommit setlocal tw=72 cc=+1 spell

" ===FileType End===

" --- VIM-PLUG SETUP ---
call plug#begin('~/.vim/plugged')

" Your list of plugins

Plug 'flazz/vim-colorschemes'

" file explorer
Plug 'scrooloose/nerdtree'

" code tags
Plug 'liuchengxu/vista.vim'

" status/tabline
Plug 'vim-airline/vim-airline'


" For fzf itself and the Vim integration
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

" as name
Plug 'bronson/vim-trailing-whitespace'

" For visualizing Vim's native marks
Plug 'kshenoy/vim-signature'

" For a separate, persistent bookmarking system
"Plug 'MattesGroeger/vim-bookmarks'

" csv
Plug 'mechatroner/rainbow_csv'

" Install vim-codefmt and its dependencies
Plug 'google/vim-maktaba'
Plug 'google/vim-codefmt'
" Also add Glaive, which is used to configure codefmt's maktaba flags. See
" " `:help :Glaive` for usage.
Plug 'google/vim-glaive'

call plug#end()
" --- END VIM-PLUG SETUP ---


let NERDTreeShowHidden=1
nmap <leader>t :NERDTreeToggle


let g:airline#extensions#tabline#enabled = 1
nmap tn :bn<CR>
nmap tp :bN<CR>
nmap t1 :b 1<CR>
nmap t2 :b 2<CR>
nmap t3 :b 3<CR>
nmap t4 :b 4<CR>
nmap t5 :b 5<CR>


" Use <Leader># to search for the word under the cursor in the CURRENT file.
nnoremap <Leader>s :grep '\b<c-r><c-w>\b' %<CR>
" Use <Leader>o to open/close the quickfix window
nnoremap <Leader>o :copen<CR>
nnoremap <Leader>c :cclose<CR>
nmap sn :bcnex<CR>
nmap sp :bcprevious<CR>


nmap ra :RainbowAlign<CR>


nmap tl :Vista!!
let g:vista_sidebar_position = 'vertical topleft'

